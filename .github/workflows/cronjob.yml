on:
  schedule: 
    - cron:  "0 0 31 * *" 
  workflow_dispatch:


name: Update data

jobs:
  updade-data:
    runs-on: ubuntu-latest
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write
    steps:
      # that installs R on the machine
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          # The R version to download (if necessary) and use.
          r-version: '4.3.2'
          # uses the RStudio Package Manager
          use-public-rspm: true

      # Install packages
      - name: Install packages
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          packages: |
            any::rvest 
            any::dplyr
            any::stringr

      # to access the code inside our repository
      - name: Check out repository
        uses: actions/checkout@v4

      # exec script
      - name: Import data
        run: Rscript -e 'source("dia1.R")'

      # Commit all changed files back to the repository
      - uses: stefanzweifel/git-auto-commit-action@v5
        with:
            commit_message: data updated

  deploy-shiny:
    # needs: updade-data
    runs-on: ubuntu-latest
    steps:
      # that installs R on the machine
      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          # The R version to download (if necessary) and use.
          r-version: '4.3.2'
          # uses the RStudio Package Manager
          use-public-rspm: true

      # Install packages
      - name: Install packages
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          cache: true
          packages: |
            any::rsconnect
            any::shiny
            any::ggplot2
            
      - name: Install Dependencies
        run: |
          Rscript -e 'install.packages("stringr")'


      # to access the code inside our repository
      - name: Check out repository
        uses: actions/checkout@v4

      # deploy
      - name: deploy
        run: Rscript -e 'source("deploy.R")'
        env:
          NAME: ${{ vars.NAME }}
          TOKEN: ${{ secrets.TOKEN }}
          SECRET: ${{ secrets.SECRET }}